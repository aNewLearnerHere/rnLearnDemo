import React from 'react';
import {
    View,
} from 'react-native';
import PropTypes from 'prop-types';

import styleUtil from '../../util/styleUtil';
import Checkable from './Checkable';
import Tag from '../Tag';

function CheckboxTag(props) {
    const {options, disabled, renderLayout} = props;
    const _renderLayout = renderLayout || renderDefaultLayout;

    return (
        // Âêå Checkbox.Group
        <Checkable {...props}>
            {({value, onChange}) => {
                return _renderLayout(options.map((option, i) => {
                    return (
                        <Tag
                            {...option}
                            key={i}
                            selected={value.includes(option.value)}
                            disabled={disabled || option.disabled}
                            onSelect={selected => onChange(selected, option, options)}
                        >{option.label}</Tag>
                    );
                }));
            }}
        </Checkable>
    );
}

function renderDefaultLayout(tags) {
    return (
        <View style={styles.container}>
            {tags.map((tag, i) => {
                return <View key={i} style={[styles.option]}>
                    {tag}
                </View>;
            })}
        </View>
    );
}

CheckboxTag.propTypes = {
    value: PropTypes.array,
    defaultValue: PropTypes.array,
    disabled: PropTypes.bool,
    options: PropTypes.array,
    renderLayout: PropTypes.func,
    onChange: PropTypes.func,
};

CheckboxTag.defaultProps = {
    defaultValue: [],
    disabled: false,
    options: [],
};

const styles = styleUtil.create({
    common: {
        container: {
            flexDirection: 'row',
            flexWrap: 'wrap',
            marginTop: 10,
            paddingHorizontal: 16,
            alignItems: 'flex-start',
        },
        option: {
            marginRight: 10,
            marginBottom: 10,
        },
    }
});

export default CheckboxTag;