import React from 'react';
import {
    View,
} from 'react-native';
import PropTypes from 'prop-types';

import styleUtil from '../../util/styleUtil';
import Checkable from './Checkable';
import Checkbox from './Checkbox';

function CheckboxGroup(props) {
    const {options, disabled, span} = props;

    return (
        // 这里对 Checkable 实例化
        // check 算法是 Checkable 内部实现的，这里只关心 UI 的实现
        <Checkable {...props}>
            {/* 这个函数会在 Checkable 中被调用 */}
            {/* @param value 计算好的当前值 */}
            {/* @param onChange 在实现 UI 时，需要有某个事件被触发并调用此参数，并传入是否选中和选项信息 */}
            {({value, onChange}) => {
                return (
                    <View style={styles.container}>
                        {options.map((option, i) => {
                            return <View key={i} style={[styles.option, { marginRight: span }]}>
                                <Checkbox
                                    checked={value.includes(option.value)}
                                    disabled={disabled || option.disabled}
                                    onChange={checked => onChange(checked, option, options)}
                                >{option.label}</Checkbox>
                            </View>;
                        })}
                    </View>
                );
            }}
        </Checkable>
    );
}

CheckboxGroup.propTypes = {
    value: PropTypes.array,
    defaultValue: PropTypes.array,
    disabled: PropTypes.bool,
    options: PropTypes.array,
    span: PropTypes.number,
    onChange: PropTypes.func,
};

CheckboxGroup.defaultProps = {
    defaultValue: [],
    disabled: false,
    options: [],
    span: 16,
};

const styles = styleUtil.create({
    common: {
        container: {
            flexDirection: 'row',
            alignItems: 'center',
            flexWrap: 'wrap',
            marginVertical: 4,
        },
        option: {
            marginVertical: 8,
        },
    }
});

export default CheckboxGroup;