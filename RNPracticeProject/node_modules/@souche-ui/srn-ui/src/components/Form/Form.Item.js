import React from 'react';
import {
    View,
    Text,
    TouchableHighlight,
    Platform,
    StyleSheet,
} from 'react-native';
import PropTypes from 'prop-types';

import styleUtil from '../../util/styleUtil';
import FontSize from '../../const/FontSize';
import theme from '../../theme';
import { containHalfWidthChar } from '../../util/propUtil';

function FormItem(props, context) {
    const {
        title,
        type,
        autoLayout,
        align,
        extra,
        required,
        disabled,
        onPress,
        titleTextStyle,
    } = props;

    const childCount = React.Children.count(props.children);
    const children = autoLayout ?
        React.Children.toArray(props.children) :
        props.children;
    const titleStyle = [context.titleStyle, props.titleStyle];
    const flattenTitleStyle = Object.assign({}, StyleSheet.flatten(titleStyle));
    const oldTitleTextStyle = {};
    const alignStyle = {};

    // 兼容旧的用法，早于 0.9.1 的版本通过 titleStyle 控制 Text 样式
    // 这里把 titleStyle 中关于 Text 的样式属性抽离出来
    if (flattenTitleStyle) {
        if (flattenTitleStyle.color) {
            oldTitleTextStyle.color = flattenTitleStyle.color;
            delete flattenTitleStyle.color;
        }
        if (flattenTitleStyle.fontSize) {
            oldTitleTextStyle.fontSize = flattenTitleStyle.fontSize;
            delete flattenTitleStyle.fontSize;
        }
    }

    switch (align) {
        case 'left': alignStyle.alignItems = 'flex-start'; break;
        case 'right': alignStyle.alignItems = 'flex-end'; break;
        case 'center': alignStyle.alignItems = 'center'; break;
    }

    const isContainHalfWidthChar = containHalfWidthChar(title);
    const requiredStarTop = Platform.OS === 'ios' ? (isContainHalfWidthChar ? 2 : 3) : 0;

    return (
        <TouchableHighlight underlayColor={theme('color_press')} onPress={onPress}>
            <View>
                <View style={[styles.container, type === 'textarea' && styles.textareaContainer]}>
                    {/* 表单项标题 */}
                    {
                        title ?
                            <View
                                style={[
                                    styles.title,
                                    type === 'textarea' && styles.textareaTitle,
                                    type === 'textarea' && !isContainHalfWidthChar && Platform.OS === 'ios' && styles.fixTextareaTitle,
                                    flattenTitleStyle,
                                ]}
                            >
                                {/* 必填星号 */}
                                {required ? <View style={[styles.requiredStar, {top: requiredStarTop}]}>
                                    <Text style={{color: theme('color_warning'), fontSize: FontSize.P1}}>*</Text>
                                </View> : null}
                                {/* 标题文字 */}
                                <Text
                                    style={[
                                        styles.titleText,
                                        context.titleTextStyle,
                                        oldTitleTextStyle,
                                        titleTextStyle,
                                        disabled && styles.disabledTitleText,
                                    ]}
                                >
                                    {title}
                                </Text>
                            </View> :
                            null
                    }
                    {
                        autoLayout ?
                            // 如果是自动布局则对 children 应用内置的布局
                            <View style={styles.control}>
                                <View style={[styles.mainControl, alignStyle]}>
                                    {children}
                                </View>
                                {childCount > 1 && <View style={styles.extra}>
                                    {children.pop()}
                                </View>}
                            </View> :
                            // 如果不是自动布局则直接使用 children 作为表单项主体
                            children
                    }
                </View>
                {/* 额外内容，单独占据一行 */}
                {extra}
            </View>
        </TouchableHighlight>
    );
}

FormItem.contextTypes = {
    titleStyle: PropTypes.any,
    titleTextStyle: Text.propTypes.style,
};

FormItem.propTypes = {
    title: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.element
    ]),
    autoLayout: PropTypes.bool,
    align: PropTypes.oneOf(['left', 'center', 'right', 'stretch']),
    extra: PropTypes.element,
    required: PropTypes.bool,
    disabled: PropTypes.bool,
    onPress: PropTypes.func,
    titleStyle: PropTypes.any,
    titleTextStyle: Text.propTypes.style,
};

FormItem.defaultProps = {
    autoLayout: true,
    required: false,
    disabled: false,
};

const styles = styleUtil.create({
    common: {
        container: {
            flexDirection: 'row',
            alignItems: 'center',
            minHeight: 48,
            paddingHorizontal: 16,
        },
        textareaContainer: {
            paddingVertical: 16,
        },
        requiredStar: {
            position: 'absolute',
            left: -10,
        },
        title: {
            position: 'relative',
            width: 98,
            marginTop: 15,
            marginBottom: 15,
            marginRight: 16,
        },
        titleText: {
            color: theme('color_text_title'),
            fontSize: FontSize.P1,
        },
        disabledTitleText: {
            color: theme('color_text_caption'),
        },
        textareaTitle: {
            alignSelf: 'flex-start',
            paddingTop: Platform.select({
                ios: 3 + StyleSheet.hairlineWidth,
                android: 0
            }),
            marginTop: 0,
            marginBottom: 0,
        },
        fixTextareaTitle: {
            paddingTop: 4 + StyleSheet.hairlineWidth,
        },
        control: {
            flex: 1,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
        },
        mainControl: {
            flex: 1,
        },
        extra: {
            marginLeft: 8
        },
    },
});

export default FormItem;