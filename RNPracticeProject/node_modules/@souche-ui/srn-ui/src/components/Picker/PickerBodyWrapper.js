import React from 'react';
import {
    View,
    StyleSheet,
} from 'react-native';

import PickerBody from '../PickerBody/PickerBody';

class PickerBodyWrapper extends React.PureComponent {

    constructor(props) {
        super(props);

        this.items = props.items;
        this.defaultValue = props.defauleValue;
        this._generateAttribute();
        this.props.getSelectedIndex && this.props.getSelectedIndex(this.selectedIndex, this.props.index);

        this._onValueChange = this._onValueChange.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        this.items = nextProps.items;
        this.defaultValue = nextProps.defauleValue;
        this._generateAttribute();
    }

    render() {
        return (
            <View style={styles.container}>
                <PickerBody
                    selectedIndex={this.selectedIndex}
                    onValueChange={this._onValueChange}
                    items={this.items}
                    disabledIndexArr={this.disabledIndexArr}
                />
            </View>
        );
    }

    _onValueChange(itemValue, itemIndex) {
        if (this.props.defauleValue !== itemValue) {
            this.props.onValueChange && this.props.onValueChange(itemValue, itemIndex, this.props.index);
        }
    }

    _generateAttribute(){
        let i, j, enableIndex = 0;
        let items = this.items;
        let length = this.items.length;
        for (i = 0; i < length; i++){
            if (this.defaultValue === items[i].value) {
                for (j = 0; j < length; j++){
                    enableIndex = i + j;
                    if (enableIndex >= length){
                        enableIndex = enableIndex - length;
                    }
                    if (!items[enableIndex].disable){
                        break;
                    }
                }
                break;
            }
        }
        if (i >= length || j >= length){ enableIndex = 0; }
        this.selectedIndex = enableIndex;
        this.disabledIndexArr = [];
        this.items.forEach((item, index) => {
            if (item.disable === true) {
                this.disabledIndexArr.push(index);
            }
        });
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
});

export default PickerBodyWrapper;