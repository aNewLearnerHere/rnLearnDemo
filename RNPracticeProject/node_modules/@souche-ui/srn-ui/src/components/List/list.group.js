
import React from 'react';
import {
    View,
    Text,
    StyleSheet,
} from 'react-native';
import PropTypes from 'prop-types';

import commonStyles from './styles/index.style';

const styles = StyleSheet.create(commonStyles);

class ListGroup extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: props.title,
            children: Array.isArray(props.children) ? props.children : [props.children],     //需要进行数组判定及转换函数处理
            itemStyle: props.itemStyle,
            crowd: props.crowd,
        };
    }

    componentWillReceiveProps(nextProps) {
        this.setState({
            title: nextProps.title,
            children: Array.isArray(nextProps.children) ? nextProps.children : [nextProps.children],
            itemStyle: nextProps.itemStyle,
            crowd: nextProps.crowd,
        });
    }

    render() {
        return (
            <View style={styles.listView}>
                {this.state.crowd ? <View style={styles.listTitleSpan} /> : null}
                {this.state.title && <Text style={styles.listTitle}>{this.state.title}</Text>}
                {
                    React.Children.map(this.state.children, (childTemp, index)=>{
                        if (!React.isValidElement(childTemp)) {
                            return childTemp;
                        }
                        let child = Object.assign({},childTemp,{props: Object.assign({}, childTemp.props, this.state.itemStyle && {itemStyle: this.state.itemStyle}, {index: index})});
                        return (
                            <View style={[styles.itemViewContainer, this.state.itemStyle && this.state.itemStyle.backgroundColor && {backgroundColor: this.state.itemStyle.backgroundColor}]} key={index}>
                                {child}
                            </View>
                        );
                    })
                }
            </View>
        );
    }
}

ListGroup.propTypes = {
    title: PropTypes.string,
    itemStyle: View.propTypes.style,
    crowd: PropTypes.bool,
};

export default ListGroup;
