import React from 'react';
import {
    View,
    Text,
    TouchableHighlight,
    StyleSheet,
} from 'react-native';

import PropTypes from 'prop-types';

import FontSize from '../../const/FontSize';
import srnTheme from '../../theme';
import { colorToRgba } from '../../util/colorUtil';

function PopoverMenu(props) {
    const { children, theme } = props;

    return (
        <View style={[styles.container, theme === 'light' && styles.lightContainer]}>
            {React.Children.map(children, (child, index) => {
                return React.cloneElement(child, { index, theme });
            })}
        </View>
    );
}

PopoverMenu.propTypes = {
    theme: PropTypes.string,
};

PopoverMenu.Item = PopoverMenuItem;

function PopoverMenuItem(props) {
    const { children, index, theme, selected, onPress } = props;

    return (
        <View>
            {index !== 0 && <View style={[styles.divide, theme === 'light' && styles.lightDivide]}/>}
            <TouchableHighlight
                style={styles.itemContainer}
                onPress={onPress}
                underlayColor={theme === 'light' ? null : '#18192d'}
            >
                <Text
                    style={[
                        styles.text,
                        theme === 'light' && styles.lightText,
                        theme === 'light' && selected && styles.selectedText,
                    ]}
                >{children}</Text>
            </TouchableHighlight>
        </View>
    );
}

PopoverMenuItem.propTypes = {
    index: PropTypes.number,
    theme: PropTypes.string,
    selected: PropTypes.bool,
    onPress: PropTypes.func,
};

PopoverMenuItem.defaultProps = {
    selected: false,
};

const styles = StyleSheet.create({
    container: {
        backgroundColor: srnTheme('color_text_title'),
        borderRadius: 4,
    },
    lightContainer: {
        backgroundColor: srnTheme('color_white'),
    },
    itemContainer: {
        height: FontSize.P2 + 30,
        paddingHorizontal: 16,
        justifyContent: 'center',
    },
    divide: {
        height: StyleSheet.hairlineWidth,
        backgroundColor: colorToRgba(srnTheme('color_white'), 0.2),
        marginHorizontal: 16,
    },
    lightDivide: {
        backgroundColor: srnTheme('color_line_b'),
    },
    text: {
        color: srnTheme('color_white'),
        fontSize: FontSize.P2,
    },
    lightText: {
        color: srnTheme('color_text_title'),
    },
    selectedText: {
        color: srnTheme('color_primary_text'),
    },
});

export default PopoverMenu;