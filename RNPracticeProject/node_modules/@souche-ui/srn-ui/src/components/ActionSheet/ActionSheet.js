import React from 'react';
import {
    View,
    Text,
    TouchableHighlight,
    StyleSheet,
} from 'react-native';
import PropTypes from 'prop-types';
import FontSize from '../../const/FontSize';
import theme from '../../theme';
import Popup from '../Popup';
import { isIPhoneX } from '../../util/deviceUtil';
import ActionSheetItem from './ActionSheetItem';

const IS_IPHONE_X = isIPhoneX();

class ActionSheet extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            visible: props.visible,
        };

        this._handleCancel = this._handleCancel.bind(this);
    }

    componentWillReceiveProps(nextProps) {
        if (nextProps.visible !== this.props.visible) {
            this.setState({
                visible: nextProps.visible,
            });
        }
    }

    _handleItemPress(e, onItemPress) {
        const { onClose } = this.props;
        // 点击 Item 会触发 close 事件
        onClose && onClose();
        onItemPress && onItemPress(e);
    }

    _handleCancel() {
        const { onClose } = this.props;
        onClose && onClose();
    }

    render() {
        const { title, options, children, hideCancel } = this.props;

        return (
            <Popup visible={this.state.visible} onClose={this.props.onClose} homeIndicatorStyle={styles.homeIndicator}>
                <View style={styles.container}>
                    {/* 标题 */}
                    {title ? <View style={styles.title}>
                        {
                            React.isValidElement(title) ?
                                title :
                                <Text style={styles.titleText}>{title}</Text>
                        }
                    </View> : null}
                    {/* 内容 */}
                    {children ? null : <View style={styles.content}>
                        {options.map((option, index) => {
                            return <ActionSheetItem key={index} {...option} _index={index}
                                                    onPress={e => this._handleItemPress(e, option.onPress)}/>;
                        })}
                    </View>}
                    {children}
                    {/* 取消按钮 */}
                    {hideCancel ? null :
                        <TouchableHighlight
                            activeOpacity={1}
                            underlayColor={theme('color_press')}
                            onPress={this._handleCancel}
                            style={[styles.cancel, IS_IPHONE_X && styles.iPhoneXCancel]}
                        >
                            <Text style={[styles.cancelText, IS_IPHONE_X && styles.iPhoneXCancelText]}>取消</Text>
                        </TouchableHighlight>}
                </View>
            </Popup>
        );
    }
}

ActionSheet.propTypes = {
    visible: PropTypes.bool,
    title: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.element,
    ]),
    options: PropTypes.arrayOf(
        PropTypes.shape(ActionSheetItem.propTypes)
    ),
    onCancel: PropTypes.func,
    onClose: PropTypes.func,
    children: PropTypes.element,
    hideCancel: PropTypes.bool,
};

ActionSheet.defaultProps = {
    visible: false,
    options: [],
    hideCancel: false,
};

const styles = StyleSheet.create({
    container: {
        backgroundColor: theme('color_background_page'),
    },
    title: {
        minHeight: 48,
        backgroundColor: theme('color_white'),
        paddingHorizontal: 16,
        borderBottomWidth: StyleSheet.hairlineWidth,
        borderBottomColor: theme('color_line_b'),
        alignItems: 'center',
        justifyContent: 'center',
    },
    titleText: {
        textAlign: 'center',
        color: theme('color_text_caption'),
        fontSize: FontSize.P2,
        lineHeight: FontSize.P2 + 3,
    },
    content: {
        marginBottom: 12,
    },
    cancel: {
        height: 48,
        backgroundColor: theme('color_white'),
        alignItems: 'center',
        justifyContent: 'center',
    },
    iPhoneXCancel: {
        height: 82,
    },
    cancelText: {
        color: theme('color_text_title'),
        fontSize: FontSize.P0,
    },
    iPhoneXCancelText: {
        marginBottom: 23,
    },
    homeIndicator: {
        height: 0,
    },
});

export default ActionSheet;