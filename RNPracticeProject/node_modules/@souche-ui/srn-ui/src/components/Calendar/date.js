import { getDaysOfMonth } from '../../util/dateUtil';

/**
 * 构造 DateResult
 * @param {Date} date
 */
export function getDateResult(date, outTransformer) {
    return date ? outTransformer(new Date(date.getTime())) : null;
}

/**
 * 构造 DateRangeResult
 * @param {Date} start
 * @param {Date} end
 */
export function getDateRangeResult(start, end, outTransformer) {
    const done = !!(start && end);
    return {
        start: getDateResult(start, outTransformer),
        end: getDateResult(end, outTransformer),
        dayCount: calculateDateRangeCount(start, end),
        done,
    };
}

/**
 * 计算日期区间的天数
 * @param {Date} start 开始日期
 * @param {Date} end 结束日期
 */
export function calculateDateRangeCount(start, end) {
    return start && end ? Math.floor((getPureDay(end) - getPureDay(start)) / (24 * 3600000)) + 1 : 0;
}

/**
 * 格式化日期为字符串
 * @param {Date} date
 * @param {string} formatStr 格式化字符串
 */
export function format(date, formatStr) {
    if (!(date instanceof Date)) {
        return '';
    }
    return formatStr
        .replace(/YYYY/, date.getFullYear())
        .replace(/MM/, ('0' + (date.getMonth() + 1)).slice(-2))
        .replace(/DD/, ('0' + date.getDate()).slice(-2));
}

/**
 * 计算一个日期添加指定月数的结果
 * @param {Date} date
 * @param {number} diff 要添加的月数
 */
export function addMonths(date, diff) {
    const result = new Date(0);
    result.setFullYear(date.getFullYear(), date.getMonth() + diff, 1);
    result.setHours(0, 0, 0, 0);
    const daysInMonth = getDaysOfMonth(result.getFullYear(), result.getMonth() + 1);
    result.setDate(Math.min(daysInMonth, date.getDate()));
    return result;
}

/**
 * 获取一个
 * @param {Date} date
 * @returns {Date}
 */
export function getPureDay(date) {
    return new Date(date.getFullYear(), date.getMonth(), date.getDate());
}