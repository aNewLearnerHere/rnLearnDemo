/**
 * 为简化接口调用 v 的值有多种类型，此函数将 v 的值统一转化为对象类型
 */
export function configurationCompletion(v) {
    if (typeof v === 'string' || typeof v === 'number') {
        return {
            text: v
        };
    }
    if (typeof v === 'function') {
        return {
            component: v
        };
    }
    if (typeof v === 'undefined') {
        return {};
    }
    return v;
}

/**
 * 复写配置项
 * @param {基础配置项} baseItems
 * @param {后期传递的配置项} items
 */
export function assignItems(baseItems = [], items = []) {

    items = Array.isArray(items) ? items : [items];
    items = items.map(v => configurationCompletion(v));

    baseItems = Array.isArray(baseItems) ? baseItems : [baseItems];
    baseItems = baseItems.map(v => configurationCompletion(v));

    return Object.assign([], baseItems, items);
}