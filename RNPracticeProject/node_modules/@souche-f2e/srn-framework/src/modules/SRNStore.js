
import SRNAxios from './../libs/Axios';
import SRNFetch from './../libs/Fetch';
import Storage from './../libs/Storage';

class SRNStore {
    /**
     * 封装 Axios 请求网络（默认自动加入 token 等 header）
     * @param arguments
     * @private
     */
    __axios = new SRNAxios();

    /**
     * 封装 Fetch 请求网络（自动加入token等header、包含弹出登陆协议逻辑）
     * @param url
     * @param options
     * @private
     */
    __fetch(url, options) {
        return SRNFetch(url, options);
    }

    /**
     * 获取缓存
     * @param key 缓存的key
     * @param callback callback(err,data)
     * @returns {*}
     * @private
     */
    __getCache(key, callback) {
        return Storage.getItem(key, callback);
    }

    /**
     * 设置缓存
     * @param key 缓存的key
     * @param value 缓存的值，最好是 object
     * @returns {*}
     * @private
     */
    __setCache(key, value) {
        return Storage.setItem(key, value);
    }

    static replaceFetchTemp = (fn) => {
        SRNStore.prototype.__fetch = fn;
        setTimeout(()=> {
            console.warn("[srn-framework] SRNStore.replaceFetchTemp 为临时方法，后续将会废弃");
        }, 0)
    }
}

export default SRNStore