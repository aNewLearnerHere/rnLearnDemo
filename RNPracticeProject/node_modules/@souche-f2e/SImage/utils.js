const defaultOrigins = [ '//img', '//souche-datacenter' ]

const imageSuffix = function (url, obj, options) {
    if(!url) return (global.IMAGE_DEFAULT_URI || 'http://img.souche.com/20160813/png/e340864b870d28aecf884998b62b2d73.png');

    url = url.replace('//souche-datacenter.img-cn-hangzhou.aliyuncs.com/images/',
      '//img.souche.com/thirdimg/');

    if(url.indexOf('cheniu.u.qiniudn.com') !== -1) {
        url = url.replace('cheniu.u.qiniudn.com', 'f.souche.com');
    }

    if(url.indexOf('http') === -1 && url.indexOf('f.souche.com') === -1 && url.indexOf('img.souche.com') === -1) {
        url = '//img.souche.com/' + url;
    }

    const ossProps = {
        resize: {},
        crop: {},
        'auto-orient': '1',
        interlace: '1',
        format: 'jpg',
    };

    if(obj.width) {
        obj.width = parseInt(obj.width);
        ossProps.resize.w = obj.width;
        ossProps.resize.limit = '0';
        ossProps.crop.w = obj.width;
        ossProps.crop.g = 'center';
    }
    if(obj.height) {
        obj.height = parseInt(obj.height);
        ossProps.resize.h = obj.height;
        ossProps.resize.limit = '0';
        ossProps.crop.h = obj.height;
        ossProps.crop.g = 'center';
    }
    if (obj.width && obj.height) {
        ossProps.resize.m = 'fill';
    }

    const origins = defaultOrigins.concat( options && options.origins || [] )

    if( origins.filter( v => url.indexOf(v) > -1 ).length ) {
        return url.split(/@|\?/)[0] + '?x-oss-process=image' + stringify(ossProps);
    } else if(url.indexOf('//f.souche.com') !== -1) {
        return url.split('?')[0] + '?imageMogr2/auto-orient/thumbnail/!' + obj.width + 'x' + obj.height + 'r/gravity/Center/crop/' + obj.width + 'x' + obj.height + '/interlace/1';
    } else {
        return url;
    }
};

function stringify(obj) {
    return Object.keys(obj).map(key => {
        const op = obj[key];
        if (Object.prototype.toString.call(op) !== '[object Object]') {
            return '/' + key + ',' + op;
        }
        const propKeys = Object.keys(op);
        if (propKeys.length === 0) {
            return '';
        }
        return '/' + key + propKeys.map(prop => {
            return ',' + prop + '_' + op[prop];
        }).join('');
    }).join('');
}

export default imageSuffix
