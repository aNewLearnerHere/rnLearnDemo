'use strict';

const path = require('path');

const async = require('async');
const chalk = require('chalk');

const downloadTemplate = require('./lib/download_template.js');
const moveExample = require('./lib/move_example.js');
const renderTemplate = require('./lib/init/render_template.js');
const clean = require('./lib/init/clean.js');
const initPackageJsonScripts = require('./lib/init/package.js');
const initDependencies = require('./lib/init/dependencies.js');
const fixBabelPresetError = require('./lib/init/fix_babel_preset_react_native_3_0_0.js');

const PROJECT_ROOT = process.cwd();
global.pkg = require(path.resolve(PROJECT_ROOT, 'package.json'));

/* TODO
 *
 * 1. gitlab 创建项目
 * 2. 执行 git init
 * 3. 初始化的时候指定 rn 版本
 */
async.waterfall([
    function (done) {
        console.log('Downloading Templates...');
        downloadTemplate.run(done);
    },
    function (done) {
        if (process.env.SRN_TEMPLATE === 'v1') {
            moveExample.run(done);
        } else {
            return done();
        }
    },
    function (done) {
        console.log('Handling Templates...');
        renderTemplate(done);
    },
    function (done) {
        clean(done);
    },
    function (done) {
        initPackageJsonScripts(done);
    },
    function (done) {
        // 修复 babel-preset-react-native 3.0.0 导致 RN 无法运行的 bug
        fixBabelPresetError(done);
    },
    function (done) {
        console.log('Installing Dependencies...');
        initDependencies(done);
    }
], function (err) {
    if (err) {
        return console.log(chalk.red(`Error: ${err.message}`), err);
    }

    console.log(chalk.green('Success: all tasks done'));
});
