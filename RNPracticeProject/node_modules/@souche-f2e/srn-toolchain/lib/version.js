'use strict';

const execSync = require('child_process').execSync;
const fs = require('fs');

const axios = require('axios');
const semver = require('semver');

const gitUtil = require('./git_util.js');
const config = require('../config/index.js');
const globalData = require('./global_data.js');
const packageJson = require(globalData.PROJECT_PACKAGE_JSON);

module.exports = {
    /**
     * 校验 Jenkins 上输入的版本号是否合理
     *      1. 去 srn-hub 查询版本是否已经存在
     */
    checkVersionValidate (options, done) {
        const version = options.version;

        if (semver.prerelease(version)) {
            return done(new Error('版本号格式应该为 x.x.x '));
        }

        axios.get(`${config.srnHubhost}/v1/bundle/${packageJson.name}/${version}/exists`).then(resp => {
            console.log('========== srn-hub ==========');
            console.log({
                status: resp.status,
                statusText: resp.statusText,
                config: {
                    headers: resp.config.headers,
                    method: resp.config.method,
                    url: resp.config.url,
                    data: resp.config.data
                },
                data: resp.data
            });
            console.log('========== srn-hub ==========');

            if (resp.status !== 200) {
                return done(new Error('查询版本是否已经存在 -- 请求失败'));
            }

            if (resp.data.success && resp.data.data.exists) {
                try {
                    console.log('当前存在的版本列表：');
                    execSync('git tag --list', { stdio: 'inherit' });
                } catch (e) {

                }

                return done(new Error(`${version}版本号已经存在`));
            }

            /*
             * 如果 version 服务器上不存在，发现本地存在这个 tag，那么可能是上次没有发布成功导致
             * 这时候以服务器为准，删除这个 tag
             */
            if (gitUtil.checkTagExists(version)) {
                gitUtil.removeTag(version);
            }

            done();
        }).catch(err => {
            console.log('========== srn-hub ==========');
            console.log({
                status: err.response.status,
                statusText: err.response.statusText,
                config: {
                    headers: err.response.config.headers,
                    method: err.response.config.method,
                    url: err.response.config.url,
                    data: err.response.config.data
                },
                data: err.response.data
            });
            console.log('========== srn-hub ==========');
            done(err);
        });
    },

    bumpVersionSync: function (version) {
        const target = Object.assign({}, packageJson);

        target.version = version;

        fs.writeFileSync(globalData.PROJECT_PACKAGE_JSON, JSON.stringify(target, null, '  '));
    }
};
