'use strict';

const path = require('path');

const axios = require('axios');

const gitUtil = require('./git_util.js');
const globalData = require('./global_data.js');
const config = require('../config/index.js');

const pkg = require(path.resolve(globalData.PROJECT_PACKAGE_JSON));

/* SRN-SERVICE */
module.exports = {
    getPayload: function () {
        const content = process.env.SRN_SERVICE;
        if (!content) {
            return null;
        } else {
            try {
                return JSON.parse(content);
            } catch (e) {
                return null;
            }
        }
    },

    lock: function (options, done) {
        const srnServicePayload = this.getPayload();
        const { application } = srnServicePayload || {};
        const srnServicehost = config.srnServiceHost;
        const srnServiceToken = config.srnServiceToken;

        const data = {
            projectName: pkg.name,
            application: application,
        };

        axios.post(`${srnServicehost}/openapi/v1/release/lock`, data, {
            headers: {
                'Content-Type': 'application/json; charset=utf-8',
                authorization: `Bearer ${srnServiceToken}`
            }
        }).then(function () {
            console.log('\n【SRN-SERVICE】已锁定项目\n');
            done();
        }).catch(function (err) {
            console.log('\n【SRN-SERVICE】锁定项目失败');
            if (err.response && err.response.status === 400 && err.response.data) {
                console.log(`【SRN-SERVICE】${err.response.data.msg}\n`);
            } else {
                console.log(err);
            }
            done(err);
        });
    },

    unlock: function (options, done) {
        const srnServicePayload = this.getPayload();
        const { application } = srnServicePayload || {};
        const srnServicehost = config.srnServiceHost;
        const srnServiceToken = config.srnServiceToken;

        const data = {
            projectName: pkg.name,
            application: application,
        };

        axios.post(`${srnServicehost}/openapi/v1/release/unlock`, data, {
            headers: {
                'Content-Type': 'application/json; charset=utf-8',
                authorization: `Bearer ${srnServiceToken}`
            }
        }).then(function () {
            console.log('\n【SRN-SERVICE】已解锁项目\n');
            done();
        }).catch(function (err) {
            console.log('\n【SRN-SERVICE】解锁项目失败\n');
            console.log(err);
            done();
        });
    },

    release: function (options, result, done) {
        try {
            const srnServicePayload = this.getPayload();
            const gitRepository = options.gitRepository;
            if (!gitRepository || !srnServicePayload) {
                return done();
            }

            const srnServicehost = config.srnServiceHost;
            const srnServiceToken = config.srnServiceToken;
            const branch = gitUtil.getBranch();
            const version = options.version;
            const releaseMessage = options.releaseMessage;
            const { operator, projectId, application, payload } = srnServicePayload;

            const data = JSON.stringify({
                projectId: projectId,
                gitRepository: gitRepository,
                branch: branch,
                version: version,
                description: releaseMessage,
                result: result,
                operator: operator,
                application: application,
                dockerImage: process.env.DOCKER_IMAGE,
                jenkinsBuildUrl: process.env.BUILD_URL,
                payload: payload,
            });

            axios.post(`${srnServicehost}/openapi/v1/release/log`, data, {
                headers: {
                    'Content-Type': 'application/json; charset=utf-8',
                    authorization: `Bearer ${srnServiceToken}`
                }
            }).then(function () {
                console.log('\n【SRN-SERVICE】发布信息记录成功\n');
                done();
            }).catch(function (err) {
                console.log('\n【SRN-SERVICE】发布信息记录失败\n');
                console.log(err);
                done();
            });
        } catch (e) {
            console.log('\n【SRN-SERVICE】发布信息记录失败\n');
            console.log(e);
            return done();
        }
    },

    successRelease: function (options, done) {
        return this.release(options, 0/* successful */, done);
    },

    failureRelease: function (options, done) {
        return this.release(options, 1/* failed */, done);
    }
};
