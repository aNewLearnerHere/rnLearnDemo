import { SendModule } from '../const';
import { NativeModules } from 'react-native';
/** 
 * 提示类 
 */

let defaultIcon = '';
export default {
    toast(text = "", icon = "", duration = 2000, qrcodeText = "") {
        let data = {
            text: "",
            icon: "",
            duration: 2000,
            qrcodeText: ""
        };
        if (typeof text === "object") {
            data = Object.assign(data, text);
        } else {
            data.text = text;
            if (typeof duration === "number") {
                data.duration = duration;
            }
            if (typeof icon === "string") {
                data.icon = icon;
            }
            if (typeof icon === "number") {
                data.duration = icon;
            }
            if (typeof qrcodeText === "string") {
                data.qrcodeText = qrcodeText;
            }
        }
        return SendModule("open/wirelessToast", data);
    },
    Loading: {
        show(text = "", icon = "") {
            let data = {
                text: "",
                icon: defaultIcon
            };
            if (typeof text === "object") {
                data = Object.assign(data, text);
            } else {
                data.text = text;
                if (typeof icon === "string") {
                    data.icon = icon || defaultIcon;
                }
            }
            return SendModule("show/wirelessLoading", data);
        },
        hide() {
            return SendModule("hide/wirelessLoading");
        }
    },
    alert(title = "", text = "", button = "确定") {
        let data = {
            title: "",
            text,
            button
        };
        if (typeof title === "object") {
            data = Object.assign(data, title);
        } else {
            data.title = title;
        }
        data.buttonArr = [button];
        delete data.button;
        return SendModule("open/wirelessAlert", data);
    },
    confirm(title = "", text = "", leftButton = "取消", rightButton = "确定") {
        let data = {
            title: "",
            text,
            leftButton,
            rightButton
        };
        if (typeof title === "object") {
            data = Object.assign(data, title);
            leftButton = data.leftButton;
            rightButton = data.rightButton;
        } else {
            data.title = title;
        }
        data.buttonArr = [leftButton, rightButton];
        delete data.leftButton;
        delete data.rightButton;
        return SendModule("open/wirelessAlert", data).then(res => {
            if (res.action === 1) {
                return Promise.resolve(res);
            }
            return Promise.reject(res);
        });
    },
    setDefaultLoadingIcon(type) {
        defaultIcon = type;
    }
};