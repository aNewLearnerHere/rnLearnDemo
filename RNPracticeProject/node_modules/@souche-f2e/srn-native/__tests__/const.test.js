import { NativeModules } from 'react-native';
import {
    loginScheme,
    State,
    SendModule,
} from '../const';

describe('const.js', () => {
    afterEach(() => {
        NativeModules.SCCRNModuleBridge._shouldProtocolFailed = false;
    });

    it('loginScheme', () => {
        expect(loginScheme).toBe('mock://open.present/login');
    })

    it('State', () => {
        expect(State.SUCCESS).toBe('success');
        expect(State.FAIL).toBe('fail');
        expect(State.CANCEL).toBe('cancel');
    })
    
    it('SendModule', async () => {
        const dateParams = {
            format: "yyyy/MM/dd",
            rightText: '确定',
            leftText: '',
            rightColor: '#FF5050',
            rightSize: '14'
        };
        const data = await SendModule('open/datePicker', dateParams);
        expect(NativeModules.SCCRNModuleBridge._savedArgumentsForTest[0].protocol).toBe('mock://open/datePicker');
        expect(NativeModules.SCCRNModuleBridge._savedArgumentsForTest[0].data).toMatchObject(dateParams);
        expect(data).toMatchObject({
            date: '2018/12/27',
        });
    
        NativeModules.SCCRNModuleBridge._shouldProtocolFailed = true;
        try {
            await SendModule('open/datePicker');
        } catch (error) {
            expect(error.message).toBe('protocol error');
        }
    });
});
